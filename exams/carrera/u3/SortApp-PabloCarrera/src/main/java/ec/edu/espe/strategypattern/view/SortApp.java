/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.espe.strategypattern.view;

import com.mongodb.client.MongoCollection;
import ec.edu.espe.strategypattern.controller.DbConnectionManager;
import ec.edu.espe.strategypattern.controller.SortingContext;
import org.bson.Document;

/**
 *
 * @author Pablo Carrera, Jsons, DCCO-ESPE
 */
public class SortApp extends javax.swing.JFrame {

    /**
     * Creates new form SortApp
     */
    public SortApp() {
        initComponents();
        DbConnectionManager.getInstance().connectDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSortedNumbers = new javax.swing.JTextField();
        btnSort = new javax.swing.JButton();
        txtUnsortedNumbers = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("By Pablo Carrera");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(420, 360, 160, 24);

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("SortingApp");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(230, 10, 100, 24);
        jPanel1.add(txtSortedNumbers);
        txtSortedNumbers.setBounds(50, 140, 290, 40);

        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });
        jPanel1.add(btnSort);
        btnSort.setBounds(360, 100, 54, 25);
        jPanel1.add(txtUnsortedNumbers);
        txtUnsortedNumbers.setBounds(50, 90, 290, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        organize();
    }//GEN-LAST:event_btnSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtSortedNumbers;
    private javax.swing.JTextField txtUnsortedNumbers;
    // End of variables declaration//GEN-END:variables
    
    public void organize() {
        SortingContext sortingContext = new SortingContext();
        String[] textUnsortedNumbers = txtUnsortedNumbers.getText().split(",\\s*");
        
        
        int[] unsortedNumbers = new int[textUnsortedNumbers.length];
        
        for (int i = 0; i < textUnsortedNumbers.length; i++) {
            unsortedNumbers[i] = Integer.parseInt(textUnsortedNumbers[i]);
        }
        
        int[] sortedNumbers = sortingContext.sort(unsortedNumbers);
        StringBuilder textSortedNumbers = new StringBuilder();
        String sortinMethod = sortingContext.getStrategy();
        
        for (int i = 0; i < sortedNumbers.length; i++) {
            textSortedNumbers.append(sortedNumbers[i]);
            if (i < sortedNumbers.length - 1) {
                textSortedNumbers.append(",");
            }
        }
        txtSortedNumbers.setText(textSortedNumbers.toString());
        writeOnDb(String.join(",", textUnsortedNumbers)
                , textUnsortedNumbers.length, sortinMethod
                , String.join(",", textSortedNumbers));
    }
    
    public void writeOnDb(String unsortedNumbers, int size, String sortingMethod, String sortedNumbers) {
        
        Document document = new Document("unsorted:", unsortedNumbers)
                .append("size:", size)
                .append("sortingUsing:", sortingMethod)
                .append("sorted: ", sortedNumbers);
        
        MongoCollection collection = DbConnectionManager.getInstance().getClient()
                .getDatabase("StrategyCarrera").getCollection("arrayPablo");
        collection.insertOne(document);
    }
    
}


